// Code generated by go-swagger; DO NOT EDIT.

package stock

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/TamerB/ecommerce-stocks-tracker/api/models"
)

// ConsumeProductStockOKCode is the HTTP code returned for type ConsumeProductStockOK
const ConsumeProductStockOKCode int = 200

/*ConsumeProductStockOK successful operation

swagger:response consumeProductStockOK
*/
type ConsumeProductStockOK struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewConsumeProductStockOK creates ConsumeProductStockOK with default headers values
func NewConsumeProductStockOK() *ConsumeProductStockOK {

	return &ConsumeProductStockOK{}
}

// WithPayload adds the payload to the consume product stock o k response
func (o *ConsumeProductStockOK) WithPayload(payload *models.BaseResponse) *ConsumeProductStockOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the consume product stock o k response
func (o *ConsumeProductStockOK) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConsumeProductStockOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConsumeProductStockBadRequestCode is the HTTP code returned for type ConsumeProductStockBadRequest
const ConsumeProductStockBadRequestCode int = 400

/*ConsumeProductStockBadRequest Invalid SKU

swagger:response consumeProductStockBadRequest
*/
type ConsumeProductStockBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewConsumeProductStockBadRequest creates ConsumeProductStockBadRequest with default headers values
func NewConsumeProductStockBadRequest() *ConsumeProductStockBadRequest {

	return &ConsumeProductStockBadRequest{}
}

// WithPayload adds the payload to the consume product stock bad request response
func (o *ConsumeProductStockBadRequest) WithPayload(payload *models.BaseResponse) *ConsumeProductStockBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the consume product stock bad request response
func (o *ConsumeProductStockBadRequest) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConsumeProductStockBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConsumeProductStockNotFoundCode is the HTTP code returned for type ConsumeProductStockNotFound
const ConsumeProductStockNotFoundCode int = 404

/*ConsumeProductStockNotFound Product not found

swagger:response consumeProductStockNotFound
*/
type ConsumeProductStockNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewConsumeProductStockNotFound creates ConsumeProductStockNotFound with default headers values
func NewConsumeProductStockNotFound() *ConsumeProductStockNotFound {

	return &ConsumeProductStockNotFound{}
}

// WithPayload adds the payload to the consume product stock not found response
func (o *ConsumeProductStockNotFound) WithPayload(payload *models.BaseResponse) *ConsumeProductStockNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the consume product stock not found response
func (o *ConsumeProductStockNotFound) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConsumeProductStockNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ConsumeProductStockDefault Return response with error other than the defined ones

swagger:response consumeProductStockDefault
*/
type ConsumeProductStockDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewConsumeProductStockDefault creates ConsumeProductStockDefault with default headers values
func NewConsumeProductStockDefault(code int) *ConsumeProductStockDefault {
	if code <= 0 {
		code = 500
	}

	return &ConsumeProductStockDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the consume product stock default response
func (o *ConsumeProductStockDefault) WithStatusCode(code int) *ConsumeProductStockDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the consume product stock default response
func (o *ConsumeProductStockDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the consume product stock default response
func (o *ConsumeProductStockDefault) WithPayload(payload *models.BaseResponse) *ConsumeProductStockDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the consume product stock default response
func (o *ConsumeProductStockDefault) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConsumeProductStockDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
