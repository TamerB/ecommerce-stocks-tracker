// Code generated by go-swagger; DO NOT EDIT.

package product

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/TamerB/ecommerce-stocks-tracker/api/models"
)

// GetProductBySkuOKCode is the HTTP code returned for type GetProductBySkuOK
const GetProductBySkuOKCode int = 200

/*GetProductBySkuOK successful operation

swagger:response getProductBySkuOK
*/
type GetProductBySkuOK struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewGetProductBySkuOK creates GetProductBySkuOK with default headers values
func NewGetProductBySkuOK() *GetProductBySkuOK {

	return &GetProductBySkuOK{}
}

// WithPayload adds the payload to the get product by sku o k response
func (o *GetProductBySkuOK) WithPayload(payload *models.BaseResponse) *GetProductBySkuOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get product by sku o k response
func (o *GetProductBySkuOK) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProductBySkuOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetProductBySkuBadRequestCode is the HTTP code returned for type GetProductBySkuBadRequest
const GetProductBySkuBadRequestCode int = 400

/*GetProductBySkuBadRequest Invalid SKU

swagger:response getProductBySkuBadRequest
*/
type GetProductBySkuBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewGetProductBySkuBadRequest creates GetProductBySkuBadRequest with default headers values
func NewGetProductBySkuBadRequest() *GetProductBySkuBadRequest {

	return &GetProductBySkuBadRequest{}
}

// WithPayload adds the payload to the get product by sku bad request response
func (o *GetProductBySkuBadRequest) WithPayload(payload *models.BaseResponse) *GetProductBySkuBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get product by sku bad request response
func (o *GetProductBySkuBadRequest) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProductBySkuBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetProductBySkuNotFoundCode is the HTTP code returned for type GetProductBySkuNotFound
const GetProductBySkuNotFoundCode int = 404

/*GetProductBySkuNotFound Product not found

swagger:response getProductBySkuNotFound
*/
type GetProductBySkuNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewGetProductBySkuNotFound creates GetProductBySkuNotFound with default headers values
func NewGetProductBySkuNotFound() *GetProductBySkuNotFound {

	return &GetProductBySkuNotFound{}
}

// WithPayload adds the payload to the get product by sku not found response
func (o *GetProductBySkuNotFound) WithPayload(payload *models.BaseResponse) *GetProductBySkuNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get product by sku not found response
func (o *GetProductBySkuNotFound) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProductBySkuNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetProductBySkuDefault Return response with error other than the defined ones

swagger:response getProductBySkuDefault
*/
type GetProductBySkuDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.BaseResponse `json:"body,omitempty"`
}

// NewGetProductBySkuDefault creates GetProductBySkuDefault with default headers values
func NewGetProductBySkuDefault(code int) *GetProductBySkuDefault {
	if code <= 0 {
		code = 500
	}

	return &GetProductBySkuDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get product by sku default response
func (o *GetProductBySkuDefault) WithStatusCode(code int) *GetProductBySkuDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get product by sku default response
func (o *GetProductBySkuDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get product by sku default response
func (o *GetProductBySkuDefault) WithPayload(payload *models.BaseResponse) *GetProductBySkuDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get product by sku default response
func (o *GetProductBySkuDefault) SetPayload(payload *models.BaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProductBySkuDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
